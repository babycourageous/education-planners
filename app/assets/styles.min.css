@-webkit-keyframes a{0%{opacity:0}to{opacity:1}}@keyframes a{0%{opacity:0}to{opacity:1}}@-webkit-keyframes b{0%{opacity:1}to{opacity:0}}@keyframes b{0%{opacity:1}to{opacity:0}}@-webkit-keyframes c{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes c{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}.vex,.vex *,.vex :after,.vex :before{-webkit-box-sizing:border-box;box-sizing:border-box}.vex{position:fixed;overflow:auto;-webkit-overflow-scrolling:touch;z-index:1111;top:0;right:0;bottom:0;left:0}.vex-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.vex-overlay{-webkit-animation:a .5s;animation:a .5s;position:fixed;z-index:1111;background:rgba(0,0,0,.4);top:0;right:0;bottom:0;left:0}.vex-overlay.vex-closing{-webkit-animation:b .5s forwards;animation:b .5s forwards}.vex-content{-webkit-animation:a .5s;animation:a .5s;background:#fff}.vex.vex-closing .vex-content{-webkit-animation:b .5s forwards;animation:b .5s forwards}.vex-close:before{font-family:Arial,sans-serif;content:"\00D7"}.vex-dialog-form{margin:0}.vex-dialog-button{text-rendering:optimizeLegibility;-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;-webkit-tap-highlight-color:transparent}.vex-loading-spinner{-webkit-animation:c .7s linear infinite;animation:c .7s linear infinite;-webkit-box-shadow:0 0 1em rgba(0,0,0,.1);box-shadow:0 0 1em rgba(0,0,0,.1);position:fixed;z-index:1112;margin:auto;top:0;right:0;bottom:0;left:0;height:2em;width:2em;background:#fff}body.vex-open{overflow:hidden}

/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}blockquote,body,dd,dl,fieldset,figure,h1,h2,h3,h4,h5,h6,hr,legend,ol,p,pre,ul{margin:0;padding:0}li>ol,li>ul{margin-bottom:0}table{border-collapse:collapse;border-spacing:0}fieldset{min-width:0;border:0}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,:after,:before{-webkit-box-sizing:inherit;box-sizing:inherit}html{font-family:PT Sans,sans-serif;font-size:1em;line-height:1.5}body,html{color:#666}body{min-height:100%;overflow-y:scroll;font-size:100%;padding-top:100px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}img,picture{margin:0;max-width:100%;height:auto}hr{border:1px solid #f5f5f5;margin:1em auto 1.5em;width:9.375em;clear:both}main{-webkit-box-flex:1;-ms-flex:1;flex:1}ol,ul{list-style-type:none;margin:0;padding:0}dl{margin-bottom:.75em}dl dt{font-weight:700;margin-top:.75em}button,dl dd{margin:0}button{border:none;padding:0;width:auto;overflow:visible;background:transparent;color:inherit;font:inherit;line-height:normal;-webkit-font-smoothing:inherit;-moz-osx-font-smoothing:inherit;-webkit-appearance:none}body{font-family:PT Sans,sans-serif;-webkit-font-feature-settings:"kern","liga","pnum";font-feature-settings:"kern","liga","pnum";font-size:1em;line-height:1.5}h1,h2,h3,h4,h5,h6{font-family:PT Sans,sans-serif;font-size:1em;line-height:1.2;margin:0 0 .75em}p{margin:0 0 .75em}a{color:#477dca;text-decoration:none;-webkit-transition:color .15s ease;transition:color .15s ease}h1{font-size:1.333em;font-weight:700;text-transform:uppercase;text-align:center;margin-bottom:1.75em}h2,h3,h4,h5,h6,p{margin:0;padding:0}p{margin-bottom:.5em}.o-container{max-width:68em;margin-left:auto;margin-right:auto;padding-left:.625em;padding-right:.625em}.o-container:after{clear:both;content:"";display:block}.o-section{padding-top:3.125em;padding-bottom:3.125em}.o-section--alt-bg{background-color:#f5f5f5}.header{width:100%;height:100px;z-index:999;background-color:#fff;-webkit-box-shadow:0 4px 15px 0 rgba(0,0,0,.1);box-shadow:0 4px 15px 0 rgba(0,0,0,.1);-webkit-transition:height .3s;transition:height .3s}.header.is-fixed{position:fixed;top:0;left:0}.header.is-small{height:60px}.navigation{position:relative;background-color:#fff}.navigation__logo{height:100px;line-height:100px;-webkit-transition:all .3s;transition:all .3s;display:inline-block;padding:0 .625em}@media (min-width:53.75em){.navigation__logo{float:left}}.navigation__logo img{display:inline-block;vertical-align:middle;-webkit-transition:all .3s;transition:all .3s;width:300px}.navigation__toggle{position:absolute;top:50%;right:0;margin-top:-10px;z-index:2}@media (min-width:53.75em){.navigation__toggle{display:none}}.navigation__items{position:fixed;width:100%;height:100vh;text-align:center;background-color:#fff;border-top:1px solid #000;-webkit-transform:translateY(-100%);-ms-transform:translateY(-100%);transform:translateY(-100%);-webkit-transition:-webkit-transform .4s;transition:-webkit-transform .4s;transition:transform .4s;transition:transform .4s,-webkit-transform .4s;z-index:-2}.navigation__items.open{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}@media (min-width:53.75em){.navigation__items{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;width:auto;height:auto;margin:0;padding:0;background-color:#fff;border-top:none;-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);-webkit-transition:none;transition:none;z-index:0}}.navigation__items--visible{display:block}.navigation__item{border-bottom:1px solid #000}@media (min-width:53.75em){.navigation__item{-webkit-box-flex:1;-ms-flex:1;flex:1;border-bottom:none;line-height:100px;background-color:#fff}}.navigation__link{display:block;color:#fff;font-weight:700;text-transform:uppercase;padding:.625em;background-color:#0badfb;-webkit-transition:all .4s;transition:all .4s}.navigation__link--active,.navigation__link:hover{color:#00486a;background-color:#fff}@media (min-width:53.75em){.navigation__link{color:#666;background-color:#fff;padding:0}}.navigation.is-small .navigation__logo{height:60px;line-height:60px}.navigation.is-small .navigation__logo img{width:225px}@media (min-width:53.75em){.navigation.is-small .navigation__logo img{width:75%;line-height:60px}}@media (min-width:53.75em){.navigation.is-small .navigation__item{line-height:60px}}.c-toggle{padding-left:.625em;padding-right:1.25em;color:#477dca;cursor:pointer}.c-hero{background:url(images/hero-v4.jpg);background-position:50%;background-repeat:no-repeat;background-size:cover;height:50vh}@media (min-width:68em){.c-hero{height:-webkit-calc(100vh - 100px);height:calc(100vh - 100px)}}.c-hero__inner{padding-top:3.5em;text-align:right}.c-hero__text{text-transform:uppercase}@media (min-width:56.25em){.c-hero__text{width:-webkit-calc(50% - 30px);width:calc(50% - 30px);float:left;margin-left:20px;left:-webkit-calc(50% - 30px + 20px);left:calc(50% - 30px + 20px);position:relative}}.c-hero__text p{line-height:1;color:#fff;font-size:1rem;padding:5px;margin-bottom:5px;text-shadow:2px 2px 3px rgba(0,0,0,.75)}.c-hero__text p+p{line-height:1;font-size:2.25rem}@media (min-width:68em){.c-hero__text p{font-size:1.1em}}.c-blurb{margin:0 auto;text-align:center}@media (min-width:35.9375em){.c-blurb{width:60%}}@media (min-width:56.25em){.c-blurb{font-size:1.1em;width:55%}}@media (min-width:68em){.c-blurb{width:65%;font-size:1.2em}}.c-achievements{color:#fff;background:url(images/stairs.jpg) 50% no-repeat;background:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.5)),to(rgba(0,0,0,.5))),url(images/stairs.jpg) 50% no-repeat;background:-webkit-linear-gradient(rgba(0,0,0,.5),rgba(0,0,0,.5)),url(images/stairs.jpg) 50% no-repeat;background:linear-gradient(rgba(0,0,0,.5),rgba(0,0,0,.5)),url(images/stairs.jpg) 50% no-repeat}.c-metrics{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:100%}@media (min-width:35.9375em){.c-metrics{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-ms-flex-pack:distribute;justify-content:space-around}}.c-metric{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:1.5625em}@media (min-width:35.9375em){.c-metric{width:30%}}.c-metric__icon{height:100px;width:100px;background-color:#0badfb;border-radius:50%}.c-metric__icon [class^=c-metric__icon-]{height:100px;width:100px;fill:#00486a;padding:.9375em}.c-metric__number{font-size:3rem;margin-bottom:0}.c-metric__text{font-size:.875rem;text-transform:uppercase}.c-services{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}@media (min-width:56.25em){.c-services{-ms-flex-pack:distribute;justify-content:space-around;-ms-flex-wrap:nowrap;flex-wrap:nowrap}}.c-services__item{-webkit-box-flex:0;-ms-flex:0 1 20.625em;flex:0 1 20.625em;margin:0 10px 10px}.c-service{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;background:#fff;padding:15px}.c-service,.c-service__icon{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.c-service__icon{height:125px;width:125px;border:1px solid #666;border-radius:50%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin:0 0 .625em}.c-service__icon [class^=c-service__icon-]{height:125px;width:125px;fill:#666;padding:15px}.c-service__name{color:#333;text-transform:uppercase;font-size:.875rem;margin:0 0 .625em}.c-service__list ul{text-align:left;color:#999;font-size:.875rem;list-style-type:disc;list-style-position:outside;padding-left:.9375em}.vex-content{position:relative;margin:20px auto;width:auto;max-width:500px;background:initial;padding:0 10px}.vex-content .vex-close{width:44px;height:44px;line-height:44px;position:absolute;top:0;right:0;padding:0 0 18px 10px;cursor:pointer}.vex.vex-theme-wireframe .vex-content{font-size:1em}.c-project__popup{display:none;background-color:#fff;padding:20px}.vex-content>.c-project__popup{display:block}.c-portfolio{margin-top:1.5625em}.c-portfolio__item{width:-webkit-calc(33.33333% - 26.66667px);width:calc(33.33333% - 26.66667px);float:left;margin-left:20px;margin-bottom:10px}@media (min-width:35.9375em){.c-portfolio__item{width:-webkit-calc(16.66667% - 23.33333px);width:calc(16.66667% - 23.33333px);float:left;margin-left:20px}}.c-project{width:100%;height:100px}.c-project__carousel .flickity-page-dots{text-align:center}.c-project__carousel .flickity-page-dots .dot{background:#477dca;width:10px;height:10px;display:inline-block;border-radius:50%;margin:0 5px}.c-project__carousel .flickity-page-dots .dot.is-selected{border:1px solid #00486a;background-color:#00aafc}.c-project__link{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%;width:100%}.c-project__logo{display:block;margin:0 auto;max-height:100px}.c-project__heading{text-transform:uppercase;font-size:1.375em;text-align:center;margin-bottom:.9375em;margin-top:.9375em}.c-project__item{text-align:center;width:100%}.c-project__date{font-size:.85em;color:#666}.c-project__info ul{list-style-type:disc;list-style-position:outside;text-align:left;margin:0 auto;width:90%}.c-project__pdf{color:#00486a;text-decoration:underline}.c-project__icon-link{height:.8rem;width:.8rem;fill:#00486a}.c-project__dots{list-style:none;text-align:center;padding:0;width:100%}.c-project__dots li{position:relative;display:inline-block;height:15px;width:15px;margin:0 5px;padding:0;cursor:pointer}.c-project__dots li button{border:1px solid ep-color("gray","light");border-radius:50%;background-color:rgba(0,0,0,.1);display:block;height:15px;width:15px;outline:none;line-height:0;font-size:0;color:transparent;padding:5px;cursor:pointer}.c-project__dots li button:focus,.c-project__dots li button:hover{outline:none}.c-project__dots li button:focus:before,.c-project__dots li button:hover:before{opacity:1}.c-project__dots li.slick-active button{border:1px solid #00486a;border-radius:50%;background-color:#00aafc}.project__popup{position:relative;background:#fff;padding:20px;width:auto;max-width:500px;margin:20px auto}.project__popup:after{clear:both;content:"";display:table}.project__heading{padding:0}.project__header{background-color:ep-color("primary","light");padding:.625em 0 1.875em;color:#fff;min-height:20vh}.project__header h1{text-align:left}.project__label{font-size:3rem}@media (min-width:35.9375em){.project__challenge{width:-webkit-calc(58.33333% - 31.66667px);width:calc(58.33333% - 31.66667px);float:left;margin-left:20px}}.project__description{padding:1.25em 0}@media (min-width:56.25em){.project__description{width:-webkit-calc(83.33333% - 36.66667px);width:calc(83.33333% - 36.66667px);float:left;margin-left:20px;left:-webkit-calc(8.33333% - 21.66667px + 20px);left:calc(8.33333% - 21.66667px + 20px);position:relative}}.project__description ul{list-style-type:disc;list-style-position:inside}.link-back{left:-webkit-calc(8.33333% - 21.66667px + 20px);left:calc(8.33333% - 21.66667px + 20px);position:relative}.link-back:after{clear:both;content:"";display:table}

/*! Flickity v2.1.1
https://flickity.metafizzy.co
---------------------------------------------- */.flickity-enabled{position:relative}.flickity-enabled:focus{outline:none}.flickity-viewport{overflow:hidden;position:relative;height:100%}.flickity-slider{position:absolute;width:100%;height:100%}.flickity-enabled.is-draggable{-webkit-tap-highlight-color:transparent;tap-highlight-color:transparent;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.flickity-enabled.is-draggable .flickity-viewport{cursor:move;cursor:-webkit-grab;cursor:grab}.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down{cursor:-webkit-grabbing;cursor:grabbing}.flickity-button{position:absolute;background:hsla(0,0%,100%,.75);border:none;color:#333}.flickity-button:hover{background:#fff;cursor:pointer}.flickity-button:focus{outline:none;-webkit-box-shadow:0 0 0 5px #19f;box-shadow:0 0 0 5px #19f}.flickity-button:active{opacity:.6}.flickity-button:disabled{opacity:.3;cursor:auto;pointer-events:none}.flickity-button-icon{fill:#333}.flickity-prev-next-button{top:50%;width:44px;height:44px;border-radius:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.flickity-prev-next-button.previous{left:10px}.flickity-prev-next-button.next{right:10px}.flickity-rtl .flickity-prev-next-button.previous{left:auto;right:10px}.flickity-rtl .flickity-prev-next-button.next{right:auto;left:10px}.flickity-prev-next-button .flickity-button-icon{position:absolute;left:20%;top:20%;width:60%;height:60%}.c-quotes{background:url(images/quotes-bg.jpg) 50% no-repeat;background:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.5)),to(rgba(0,0,0,.5))),url(images/quotes-bg.jpg) 50% no-repeat;background:-webkit-linear-gradient(rgba(0,0,0,.5),rgba(0,0,0,.5)),url(images/quotes-bg.jpg) 50% no-repeat;background:linear-gradient(rgba(0,0,0,.5),rgba(0,0,0,.5)),url(images/quotes-bg.jpg) 50% no-repeat;background-size:cover;min-height:400px;color:#fff}.c-quotes__icon{height:50px;width:50px;fill:#00aafc;display:block;margin:0 auto}.c-quotes__carousel:after{clear:both;content:"";display:block}.c-quotes__carousel .flickity-page-dots{position:absolute;width:100%;bottom:-25px;padding:0;margin:0;list-style:none;text-align:center;line-height:1}.c-quotes__carousel .flickity-page-dots .dot{display:inline-block;width:8px;height:8px;margin:0 8px;background-color:hsla(0,0%,100%,.25);border-radius:50%;cursor:pointer}.c-quotes__carousel .flickity-page-dots .dot.is-selected{background-color:#fff}.c-slides{position:relative}@media (min-width:35.9375em){.c-slides{width:-webkit-calc(66.66667% - 33.33333px);width:calc(66.66667% - 33.33333px);float:left;margin-left:20px;left:-webkit-calc(16.66667% - 23.33333px + 20px);left:calc(16.66667% - 23.33333px + 20px);position:relative}}.c-slide{width:100%;display:block;text-align:center;padding-left:.625em;padding-right:.625em}.c-slide__author{font-style:italic}.c-member__info{text-align:center}.c-resume__bio{padding-top:20px}.location__img{background-image:url(images/hero-v3.jpg);background-size:cover;background-position:50%;width:100%;height:75vh}@media (min-width:56.25em){.location__img{width:50%;float:left}}.location__map{width:100%;height:75vh}@media (min-width:56.25em){.location__map{width:50%;float:left}}.c-footer{min-height:4.6875em;background-color:#00486a;padding:1.25em;text-align:center;color:#fff}.c-footer__icon{display:inline-block;height:50px;width:50px;fill:#fff}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
